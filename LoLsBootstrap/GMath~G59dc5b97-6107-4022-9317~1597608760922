{
	"name": "Math",
	"key": "G59dc5b97-6107-4022-9317~1597608760922",
	"description": "This is a Math Grammar in Language of Languages.",
	"authors": "Jamie Douglass",
	"license": "MIT Open Source 2020",
	"source": "ometa math {expression = term:t space* end           -> t,\n term       = term:t \"+\" factor:f         -> (t + f)\n             | term:t \"-\" factor:f         -> (t - f)\n
             | factor,\n  factor     = factor:f \"*\" primary:p      -> (f * p)\n             | factor:f \"/\" primary:p      -> (f / p)\n             | primary,\n  primary    = Group\n             | Number,\n  Group      = \"(\" term:t \")\"              -> t,\n  Number     = space* digits:n             -> n,\n  digits     = digits:n digit:d            -> (n * 10 + d)\n
             | digit,\n  digit      = ^digit:d                    -> d.digitValue()\n}",
	"startRule": "expression",
	"inputType": "text/plain",
	"outputType": "text/plain",
	"rulesSource": "math=objectThatDelegatesTo(OMeta,{\n\"expression\":function(){var $elf=this,_fromIdx=this.input.idx,t;return (function(){t=this._apply(\"term\");this._many((function(){return this._apply(\"space\")}));this._apply(\"end\");return t}).call(this)},\n\"term\":function(){var $elf=this,_fromIdx=this.input.idx,t,f;return this._or((function(){return (function(){t=this._apply(\"term\");this._applyWithArgs(\"token\",\"+\");f=this._apply(\"factor\");return (t + f)}).call(this)}),(function(){return (function(){t=this._apply(\"term\");this._applyWithArgs(\"token\",\"-\");f=this._apply(\"factor\");return (t - f)}).call(this)}),(function(){return this._apply(\"factor\")}))},\n\"factor\":function(){var $elf=this,_fromIdx=this.input.idx,f,p;return this._or((function(){return (function(){f=this._apply(\"factor\");this._applyWithArgs(\"token\",\"*\");p=this._apply(\"primary\");return (f * p)}).call(this)}),(function(){return (function(){f=this._apply(\"factor\");this._applyWithArgs(\"token\",\"/\");p=this._apply(\"primary\");return (f / p)}).call(this)}),(function(){return this._apply(\"primary\")}))},\n\"primary\":function(){var $elf=this,_fromIdx=this.input.idx;return this._or((function(){return this._apply(\"Group\")}),(function(){return this._apply(\"Number\")}))},\n\"Group\":function(){var $elf=this,_fromIdx=this.input.idx,t;return (function(){this._applyWithArgs(\"token\",\"(\");t=this._apply(\"term\");this._applyWithArgs(\"token\",\")\");return t}).call(this)},\n\"Number\":function(){var $elf=this,_fromIdx=this.input.idx,n;return (function(){this._many((function(){return this._apply(\"space\")}));n=this._apply(\"digits\");return n}).call(this)},\n\"digits\":function(){var $elf=this,_fromIdx=this.input.idx,n,d;return this._or((function(){return (function(){n=this._apply(\"digits\");d=this._apply(\"digit\");return ((n * (10)) + d)}).call(this)}),(function(){return this._apply(\"digit\")}))},\n\"digit\":function(){var $elf=this,_fromIdx=this.input.idx,d;return\n(function(){d=OMeta._superApplyWithArgs(this,'digit');return\n d.digitValue()}).call(this)}})"
}